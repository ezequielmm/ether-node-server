import { Injectable } from '@nestjs/common';
import { Cron, CronExpression } from '@nestjs/schedule';
import { ContestService } from 'src/game/contest/contest.service';
import { ContestMapService } from 'src/game/contestMap/contestMap.service';
import { MapService } from 'src/game/map/map.service';

@Injectable()
export class TaskService {
    constructor(
        private readonly mapService: MapService,
        private readonly contestService: ContestService,
        private readonly contestMapService: ContestMapService,
    ) {}

    @Cron(CronExpression.EVERY_DAY_AT_MIDNIGHT)
    async handleMapCreation(): Promise<void> {
        // First we query the database to confirm if we have a map contest
        // for today
        const contest = await this.contestService.findActive();

        // If we have a contest, we don't need to create a new map
        if (contest) return;

        // We get the current date
        const now = new Date();
        now.setUTCHours(0, 0, 0, 0);

        // If we don't have a contest, we generate the first map
        // and create a contest for it
        const map = this.mapService.getActZero();

        // We create the map first
        const contestMap = await this.contestMapService.create({
            name: `Autogenerated map ${now.getTime()}`,
            node: map,
        });

        // Now we get the last event_id from the database, this filed is used to
        // show the map on the admin panel calendar
        const event_id = await this.contestService.getLastEventId();

        // Now we schedule the contest to the day
        const newContest = await this.contestService.create({
            map_id: contestMap.id,
            event_id: event_id + 1,
            available_at: now,
        });
    }
}
