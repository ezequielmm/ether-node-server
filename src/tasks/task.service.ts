import { Injectable, Logger } from '@nestjs/common';
import { Cron, CronExpression } from '@nestjs/schedule';
import { ContestService } from 'src/game/contest/contest.service';
import { ContestMapService } from 'src/game/contestMap/contestMap.service';
import {
    addDaysToDate,
    addHoursToDate,
    countSteps,
    findStepWithMostNodes,
    setHoursMinutesSecondsToUTCDate,
} from 'src/utils';
import { MapBuilderService } from 'src/game/map/builder/mapBuilder.service';
import { createMoreOrEquals12NodesMap, createLess12NodesMap, createLess5NodesMap } from 'src/game/map/builder/actOne.config';
import { SettingsService } from 'src/game/components/settings/settings.service';

@Injectable()
export class TaskService {
    private readonly logger: Logger = new Logger(TaskService.name);

    constructor(
        private readonly mapBuilderService: MapBuilderService,
        private readonly contestService: ContestService,
        private readonly contestMapService: ContestMapService,
        private readonly settingsService: SettingsService,
    ) {}

    @Cron(CronExpression.EVERY_DAY_AT_11PM, {
        name: 'Create Contest Map',
        timeZone: 'UTC',
    })
    async handleMapCreation(): Promise<void> {
        console.log("Checking if we need to create a new map for today contest...")

        // First we get the current date and add 24 hours to it
        // then we set the time to 00:00:00 to get the available_at date
        const now = new Date();

        const availableAt = addDaysToDate(now);
        availableAt.setUTCHours(0, 0, 0, 0);

        const contestExists = await this.contestService.findActiveContest(
            availableAt,
        );

        // If we have a contest, we don't need to create a new map
        if (contestExists !== null) {
            console.log("We have a contest for today, skipping...");
            return;
        }

        // Now we calculate the valid_until from the ends_at date
        const endsAt = setHoursMinutesSecondsToUTCDate(
            availableAt,
            23,
            59,
            59,
            999,
        );
        const validUntil = addHoursToDate(endsAt, 6);


        const { maxAutogeneratedMapSteps, maxAutogeneratedMapNodes } =
            await this.settingsService.getSettings();

        let map;

        // If we don't have a contest, we generate the first map
        // and create a contest for it, first we generate act 0
        if(maxAutogeneratedMapSteps >= 12){
            map = await this.mapBuilderService.createMap({
                actConfig: createMoreOrEquals12NodesMap(maxAutogeneratedMapSteps, maxAutogeneratedMapNodes),
                makeAvailable: true
            });
        }else if(maxAutogeneratedMapSteps < 12 && maxAutogeneratedMapSteps >= 5){
            map = await this.mapBuilderService.createMap({
                actConfig: createLess12NodesMap(maxAutogeneratedMapSteps, maxAutogeneratedMapNodes),
                makeAvailable: true
            });
        }else{
            //- maxAutogeneratedMapSteps minor 5
            map = await this.mapBuilderService.createMap({
                actConfig: createLess5NodesMap(maxAutogeneratedMapSteps, maxAutogeneratedMapNodes),
                makeAvailable: true
            });
        }
        
        // Here we calculate how many steps we have in the map
        const maxSteps = countSteps(map);
        const maxNodes = findStepWithMostNodes(map);

        // We create the map first
        const contestMap = await this.contestMapService.create({
            name: `Autogenerated map ${now.getTime()}`,
            nodes: map,
            maxSteps,
            maxNodes,
            isGenerated: true,
        });

        // Now we get the last event_id from the database, this filed is used to
        // show the map on the admin panel calendar
        const event_id = await this.contestService.getLastEventId();

        // Now we schedule the contest to the day
        await this.contestService.create({
            map_id: contestMap.id,
            event_id: event_id + 1,
            available_at: availableAt,
            ends_at: endsAt,
            valid_until: validUntil,
        });

        console.log("Created a new map " + contestMap.name + " and contest for today!")
    }
}
